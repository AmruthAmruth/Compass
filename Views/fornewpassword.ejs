<%- include('partials/header') %>

<style>
    :root {
        --primary-color: #4EA685;
        --secondary-color: #57B894;
        --black: #000000;
        --white: #ffffff;
        --gray: #efefef;
        --gray-2: #757575;
    }

    body {
        background-color: var(--gray);
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        position: relative;
        overflow: hidden;
    }

    .background-pattern {
        position: absolute;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, var(--primary-color) 20%, var(--secondary-color) 80%);
        clip-path: circle(60% at right 80%);
        z-index: 1;
    }

    .password-reset-card {
        background: var(--white);
        padding: 50px;
        border-radius: 20px;
        box-shadow: 0 15px 25px rgba(0, 0, 0, 0.3);
        text-align: center;
        animation: slideIn 0.5s ease-in-out;
        position: relative;
        z-index: 2;
        max-width: 450px;
        width: 100%;
        border: 3px solid var(--primary-color);
    }

    @keyframes slideIn {
        from {
            opacity: 0;
            transform: translateY(-30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .btn-primary {
        background-color: var(--primary-color);
        border: none;
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        padding: 12px;
        border-radius: 10px;
        font-weight: bold;
        letter-spacing: 1px;
        color: var(--white);
    }

    .btn-primary:hover {
        background-color: var(--secondary-color);
        transform: scale(1.1);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    }

    .password-reset-card h3 {
        font-size: 1.8rem;
        font-weight: bold;
        margin-bottom: 15px;
        color: var(--primary-color);
    }

    .password-reset-card p {
        font-size: 1rem;
        color: var(--gray-2);
        margin-bottom: 20px;
    }
    .password-reset-card button{
        margin-top: 10px;
        cursor: pointer;
    }

    .input-group {
        position: relative;
        width: 100%;
    }

    .input-group input {
        width: 100%;
        padding: 12px 10px 12px 10px;
        margin-top: 10px;
        border-radius: 10px;
        border: 2px solid var(--primary-color);
        outline: none;
        font-size: 1rem;
        transition: all 0.3s ease-in-out;
    }

    .input-group input:focus {
        border-color: var(--secondary-color);
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }

    .toggle-password {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
        color: var(--gray-2);
    }

    .password-strength {
        font-size: 0.9rem;
        font-weight: bold;
        margin-top: 5px;
        color: var(--primary-color);
        text-align: left;
    }

    .password-match {
        font-size: 0.9rem;
        font-weight: bold;
        margin-top: 5px;
        color: red;
        text-align: left;
    }
</style>

<body>
    <div class="background-pattern"></div>
    <div class="container d-flex justify-content-center align-items-center">
        <div class="password-reset-card">
            <h3>Reset Password</h3>
            <p class="text-muted">Create a new password for your account.</p>
            <form id="passwordForm">
                <div class="mb-3 input-group">
                    <input type="password" id="newPassword" placeholder="New Password" required>
                    <span class="toggle-password" onclick="togglePassword('newPassword')">üëÅ</span>
                </div>
                <div class="password-strength" id="passwordStrength"></div>

                <div class="mb-3 input-group">
                    <input type="password" id="confirmPassword" placeholder="Confirm Password" required>
                    <span class="toggle-password" onclick="togglePassword('confirmPassword')">üëÅ</span>
                </div>
                <div class="password-match" id="passwordMatch"></div>

                <button type="submit" class="btn btn-primary w-100">Reset Password</button>
            </form>
        </div>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   <script>
    document.getElementById("passwordForm").addEventListener("submit", function (event) {
    event.preventDefault(); // Prevent default form submission

    let npassword = document.getElementById("newPassword").value;
    let cpassword = document.getElementById("confirmPassword").value;
    let strengthIndicator = document.getElementById("passwordStrength");
    let matchIndicator = document.getElementById("passwordMatch");

    // Basic validation
    if (npassword.length < 6) {
        strengthIndicator.textContent = "Password must be at least 6 characters long!";
        strengthIndicator.style.color = "red";
        return;
    }

    if (npassword !== cpassword) {
        matchIndicator.textContent = "Passwords do not match!";
        matchIndicator.style.color = "red";
        return;
    }

    // Show loading message
    Swal.fire({
        title: "Updating Password...",
        allowOutsideClick: false,
        showConfirmButton: false,
        heightAuto: false, 
        didOpen: () => {
            Swal.showLoading();
        }
    });

    // Make API request to reset password
    fetch("/resetpassword", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ npassword, cpassword })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                icon: "success",
                title: "Password Updated!",
                text: "Your password has been reset successfully.",
                timer: 2000,
                heightAuto: false, 
                showConfirmButton: false
            }).then(() => {
                window.location.href = "/login"; // Redirect to login page
            });
        } else {
            Swal.fire({
                icon: "error",
                title: "Error",
                heightAuto: false, 
                text: data.message
            });
        }
    })
    .catch(() => {
        Swal.fire({
            icon: "error",
            title: "Server Error",
            heightAuto: false, 
            text: "Something went wrong, please try again."
        });
    });
});

   </script>
    
</body>

</html>
